#!/usr/bin/env node

/**
 * Script para aplicar as APIs j√° configuradas do RotaLivre
 * 
 * Este script aplica as chaves de API que voc√™ j√° configurou anteriormente.
 */

const fs = require('fs');
const path = require('path');

console.log('üîë Aplicando suas APIs j√° configuradas...');
console.log('=====================================\n');

// Suas chaves de API existentes
const apis = {
  locationiq: 'pk.2a534dde1087d13ce4b459fe0b9acd68',
  openweather: 'bd5e378503939ddaee76f12ad7a97608',
  serpapi: 'your_serpapi_key_here' // Precisa ser configurada
};

// Conte√∫do do arquivo .env.local
const envContent = `# ===========================================
# CONFIGURA√á√ÉO DAS APIs - RotaLivre
# ===========================================
# Aplicado automaticamente com suas chaves existentes

# 1. SerpAPI - Para buscar postos de gasolina, restaurantes, hot√©is, etc.
#    ‚ö†Ô∏è  PRECISA SER CONFIGURADA
#    Como obter: https://serpapi.com/
NEXT_PUBLIC_SERPAPI_KEY=${apis.serpapi}

# 2. LocationIQ - Para geocodifica√ß√£o e detalhes de localiza√ß√£o
#    ‚úÖ CHAVE CONFIGURADA
NEXT_PUBLIC_LOCATIONIQ_API_KEY=${apis.locationiq}

# 3. OpenWeatherMap - Para dados meteorol√≥gicos
#    ‚úÖ CHAVE CONFIGURADA
NEXT_PUBLIC_OPENWEATHER_API_KEY=${apis.openweather}

# ===========================================
# CONFIGURA√á√ïES ADICIONAIS
# ===========================================

# URL base da aplica√ß√£o (para desenvolvimento)
NEXT_PUBLIC_APP_URL=http://localhost:3000

# Configura√ß√µes do servidor
NEXT_PUBLIC_SERVER_HOST=127.0.0.1
NEXT_PUBLIC_SERVER_PORT=3001

# ===========================================
# STATUS DAS APIs
# ===========================================
# ‚úÖ LocationIQ: Configurado e funcionando
# ‚úÖ OpenWeatherMap: Configurado e funcionando
# ‚ö†Ô∏è  SerpAPI: Precisa ser configurada (opcional)
`;

try {
  // Caminho do arquivo .env.local
  const envPath = path.join(process.cwd(), '.env.local');
  
  // Verificar se o arquivo j√° existe
  if (fs.existsSync(envPath)) {
    console.log('‚ö†Ô∏è  O arquivo .env.local j√° existe.');
    console.log('üìù Fazendo backup para .env.local.backup...');
    
    // Fazer backup
    fs.copyFileSync(envPath, envPath + '.backup');
  }
  
  // Escrever o arquivo .env.local
  fs.writeFileSync(envPath, envContent);
  
  console.log('‚úÖ Arquivo .env.local criado com sucesso!');
  console.log('\nüìä Status das suas APIs:');
  console.log('========================');
  console.log('‚úÖ LocationIQ: Configurado e funcionando');
  console.log('‚úÖ OpenWeatherMap: Configurado e funcionando');
  console.log('‚ö†Ô∏è  SerpAPI: Precisa ser configurada (opcional)');
  
  console.log('\nüöÄ Pr√≥ximos passos:');
  console.log('1. Reinicie o servidor: npm run dev');
  console.log('2. Verifique se as APIs est√£o funcionando');
  console.log('3. Para configurar SerpAPI: https://serpapi.com/');
  
  console.log('\nüí° Dica: As APIs LocationIQ e OpenWeatherMap j√° est√£o funcionando!');
  
} catch (error) {
  console.error('‚ùå Erro ao aplicar as configura√ß√µes:', error.message);
  process.exit(1);
}
